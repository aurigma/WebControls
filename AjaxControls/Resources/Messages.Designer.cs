//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aurigma.GraphicsMill.AjaxControls.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Aurigma.GraphicsMill.AjaxControls.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value indicating whether a postback to the server automatically occurs when the user zooms or scrolls the bitmap..
        /// </summary>
        internal static string BaseViewer_AutoPostBack {
            get {
                return ResourceManager.GetString("BaseViewer_AutoPostBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets values which configure automatic postback for individual events..
        /// </summary>
        internal static string BaseViewer_ClientSideOptions {
            get {
                return ResourceManager.GetString("BaseViewer_ClientSideOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the maximum allowed zoom value..
        /// </summary>
        internal static string BaseViewer_MaxZoom {
            get {
                return ResourceManager.GetString("BaseViewer_MaxZoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the minimum allowed zoom value..
        /// </summary>
        internal static string BaseViewer_MinZoom {
            get {
                return ResourceManager.GetString("BaseViewer_MinZoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the navigator control ID (i.e. value stored in the attribute id of the tag that inserts the control)..
        /// </summary>
        internal static string BaseViewer_Navigator {
            get {
                return ResourceManager.GetString("BaseViewer_Navigator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the rubberband control ID (i.e. value stored in the attribute id of the tag that inserts the control)..
        /// </summary>
        internal static string BaseViewer_Rubberband {
            get {
                return ResourceManager.GetString("BaseViewer_Rubberband", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get/sets value that specifies whether to take into account the image resolution (DPI) during displaying..
        /// </summary>
        internal static string BaseViewer_ScaleToActualSize {
            get {
                return ResourceManager.GetString("BaseViewer_ScaleToActualSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X resolution of browser window..
        /// </summary>
        internal static string BaseViewer_ScreenXDpi {
            get {
                return ResourceManager.GetString("BaseViewer_ScreenXDpi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Y resolution of browser window..
        /// </summary>
        internal static string BaseViewer_ScreenYDpi {
            get {
                return ResourceManager.GetString("BaseViewer_ScreenYDpi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value that specifies when to display the scroll bars..
        /// </summary>
        internal static string BaseViewer_ScrollBarsStyle {
            get {
                return ResourceManager.GetString("BaseViewer_ScrollBarsStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value that specifies a scroll bar width. Typically you should not modify this value (since it has optimal value for the browsers at the present time)..
        /// </summary>
        internal static string BaseViewer_ScrollBarWidth {
            get {
                return ResourceManager.GetString("BaseViewer_ScrollBarWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fires when some scroll bar was moved..
        /// </summary>
        internal static string BaseViewer_Scrolled {
            get {
                return ResourceManager.GetString("BaseViewer_Scrolled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets alignment of viewport..
        /// </summary>
        internal static string BaseViewer_ViewportAlignment {
            get {
                return ResourceManager.GetString("BaseViewer_ViewportAlignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fires when the content is changed in this viewer control..
        /// </summary>
        internal static string BaseViewer_WorkspaceChanged {
            get {
                return ResourceManager.GetString("BaseViewer_WorkspaceChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fires when the workspace displayed in the control is clicked..
        /// </summary>
        internal static string BaseViewer_WorkspaceClick {
            get {
                return ResourceManager.GetString("BaseViewer_WorkspaceClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the current zoom value..
        /// </summary>
        internal static string BaseViewer_Zoom {
            get {
                return ResourceManager.GetString("BaseViewer_Zoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fires when the content is zoomed in this viewer control..
        /// </summary>
        internal static string BaseViewer_Zoomed {
            get {
                return ResourceManager.GetString("BaseViewer_Zoomed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the zooming behavior of the control (automatic or manual)..
        /// </summary>
        internal static string BaseViewer_ZoomMode {
            get {
                return ResourceManager.GetString("BaseViewer_ZoomMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the value that specifies a zoom quality..
        /// </summary>
        internal static string BaseViewer_ZoomQuality {
            get {
                return ResourceManager.GetString("BaseViewer_ZoomQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value which specifies whether the bitmap specified in the Bitmap property should be stored between server roundtrips..
        /// </summary>
        internal static string BitmapViewer_BitmapStateEnabled {
            get {
                return ResourceManager.GetString("BitmapViewer_BitmapStateEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the file format of the images which are sent to the browser..
        /// </summary>
        internal static string BitmapViewer_BrowserImageFormat {
            get {
                return ResourceManager.GetString("BitmapViewer_BrowserImageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the JPEG quality of the images which are sent to the browser when BrowserImageFormat is JPEG..
        /// </summary>
        internal static string BitmapViewer_BrowserJpegQuality {
            get {
                return ResourceManager.GetString("BitmapViewer_BrowserJpegQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets mode in which image will be loaded..
        /// </summary>
        internal static string BitmapViewer_ImageLoadMode {
            get {
                return ResourceManager.GetString("BitmapViewer_ImageLoadMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value which enables the low-resolution preview of the image which is displayed in the background of the control while the portion of the high-resolution image is loaded to the browser..
        /// </summary>
        internal static string BitmapViewer_PreviewImageEnabled {
            get {
                return ResourceManager.GetString("BitmapViewer_PreviewImageEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the ratio of the image stored in the Bitmap property and the preview displayed in the background of the control (when enabled)..
        /// </summary>
        internal static string BitmapViewer_PreviewImageResizeRatio {
            get {
                return ResourceManager.GetString("BitmapViewer_PreviewImageResizeRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets size of tiles in pixels..
        /// </summary>
        internal static string BitmapViewer_TileSize {
            get {
                return ResourceManager.GetString("BitmapViewer_TileSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BorderWidth should be in pixels..
        /// </summary>
        internal static string BorderWidthFormatException {
            get {
                return ResourceManager.GetString("BorderWidthFormatException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets format of images visible into client browser..
        /// </summary>
        internal static string BrowserImageFormat {
            get {
                return ResourceManager.GetString("BrowserImageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto format..
        /// </summary>
        internal static string BrowserImageFormat_Auto {
            get {
                return ResourceManager.GetString("BrowserImageFormat_Auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Images will be rendered in &apos;gif&apos; format..
        /// </summary>
        internal static string BrowserImageFormat_Gif {
            get {
                return ResourceManager.GetString("BrowserImageFormat_Gif", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Images will be rendered in &apos;jpeg&apos; format..
        /// </summary>
        internal static string BrowserImageFormat_Jpeg {
            get {
                return ResourceManager.GetString("BrowserImageFormat_Jpeg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Images will be rendered in &apos;png&apos; format..
        /// </summary>
        internal static string BrowserImageFormat_Png {
            get {
                return ResourceManager.GetString("BrowserImageFormat_Png", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access denied when creating a subfolder of App_Data at the following location: &apos;{0}&apos;. App_Data is used because cache folders are not configured in web.config. Make sure that the account ASP.NET is running under has &quot;modify&quot; permission for this folder or configure RelativePrivateCachePath, AbsolutePrivateCachePath, and RelativePublicCachePath keys in web.config..
        /// </summary>
        internal static string CanNotCreateAppDir {
            get {
                return ResourceManager.GetString("CanNotCreateAppDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate the Aurigma.GraphicsMill.AjaxControls configuration section in the web.config..
        /// </summary>
        internal static string CanNotLocateAurigmaGraphicsMillAjaxControlsSection {
            get {
                return ResourceManager.GetString("CanNotLocateAurigmaGraphicsMillAjaxControlsSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t locate navigator with ID equals &apos;{0}&apos;..
        /// </summary>
        internal static string CanNotLocateNavigator {
            get {
                return ResourceManager.GetString("CanNotLocateNavigator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate the AbsolutePrivateCachePath or RelativePrivateCachePath key in the Aurigma.GraphicsMill.AjaxControls configuration section of the web.config..
        /// </summary>
        internal static string CanNotLocatePrivateCachePathKey {
            get {
                return ResourceManager.GetString("CanNotLocatePrivateCachePathKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate the RelativePublicCachePath key in the Aurigma.GraphicsMill.AjaxControls configuration section of the web.config..
        /// </summary>
        internal static string CanNotLocateRelativePublicCachePathKey {
            get {
                return ResourceManager.GetString("CanNotLocateRelativePublicCachePathKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t locate rubberband with ID equals &apos;{0}&apos;..
        /// </summary>
        internal static string CanNotLocateRubberband {
            get {
                return ResourceManager.GetString("CanNotLocateRubberband", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access denied when writing files to App_Data at the following location: &apos;{0}&apos;. App_Data is used because cache folders are not configured in web.config. Make sure that the account ASP.NET is running under has &quot;modify&quot; permission for this folder or configure RelativePrivateCachePath, AbsolutePrivateCachePath, and RelativePublicCachePath keys in web.config..
        /// </summary>
        internal static string CanNotWriteAppDir {
            get {
                return ResourceManager.GetString("CanNotWriteAppDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access denied when writing files to AjaxControls cache directory.  Make sure that the account ASP.NET is running under has &quot;modify&quot; permission for this folder..
        /// </summary>
        internal static string CanNotWriteCacheDir {
            get {
                return ResourceManager.GetString("CanNotWriteCacheDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a Navigator control..
        /// </summary>
        internal static string ControlIsNotNavigator {
            get {
                return ResourceManager.GetString("ControlIsNotNavigator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a Rubberband control..
        /// </summary>
        internal static string ControlIsNotRubberband {
            get {
                return ResourceManager.GetString("ControlIsNotRubberband", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A potentially dangerous value was received from the client..
        /// </summary>
        internal static string DangerousInputDetected {
            get {
                return ResourceManager.GetString("DangerousInputDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mode in which image will be loaded to client browser..
        /// </summary>
        internal static string ImageLoadMode {
            get {
                return ResourceManager.GetString("ImageLoadMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only visible and unloaded parts of image will be loaded to client..
        /// </summary>
        internal static string ImageLoadMode_AdaptiveTile {
            get {
                return ResourceManager.GetString("ImageLoadMode_AdaptiveTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entrie image will be loaded to client..
        /// </summary>
        internal static string ImageLoadMode_Entire {
            get {
                return ResourceManager.GetString("ImageLoadMode_Entire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regulat tiles for entrie image will be created and only visible tiles will be loaded to client..
        /// </summary>
        internal static string ImageLoadMode_RegularTile {
            get {
                return ResourceManager.GetString("ImageLoadMode_RegularTile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect parameter type..
        /// </summary>
        internal static string IncorrectParameterType {
            get {
                return ResourceManager.GetString("IncorrectParameterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cache index file lock timeout has expired. Make sure that files in the private or public cache are not locked by some process..
        /// </summary>
        internal static string IndexFileLockTimeoutHasExpired {
            get {
                return ResourceManager.GetString("IndexFileLockTimeoutHasExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enum value should be passed in remote scripting call using either its string or integer representation..
        /// </summary>
        internal static string InvalidEnumValue {
            get {
                return ResourceManager.GetString("InvalidEnumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jpeg quality should be in the range [0..100]..
        /// </summary>
        internal static string JpegQualityIsOutOfRange {
            get {
                return ResourceManager.GetString("JpegQualityIsOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opacity of mask should be between 0 and 100..
        /// </summary>
        internal static string MaskOpacityIsOutOfRange {
            get {
                return ResourceManager.GetString("MaskOpacityIsOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum value of the zoom amount should be larger then 0..
        /// </summary>
        internal static string MaxZoomIsOutOfRange {
            get {
                return ResourceManager.GetString("MaxZoomIsOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method requires {0} parameters..
        /// </summary>
        internal static string MethodRequiresParameters {
            get {
                return ResourceManager.GetString("MethodRequiresParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum value of the zoom amount should be larger then 0..
        /// </summary>
        internal static string MinZoomIsOutOfRange {
            get {
                return ResourceManager.GetString("MinZoomIsOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter {0} passed to {1} should not be null..
        /// </summary>
        internal static string NullReferenceException {
            get {
                return ResourceManager.GetString("NullReferenceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output parameters are not supported..
        /// </summary>
        internal static string OutputParametersAreNotSupported {
            get {
                return ResourceManager.GetString("OutputParametersAreNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value should be in range [1..500]..
        /// </summary>
        internal static string PreviewImageResizeRatioOutOfRange {
            get {
                return ResourceManager.GetString("PreviewImageResizeRatioOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private cache folder &apos;{0}&apos; does not exist. Make sure that AbsolutePrivateCachePath or RelativePrivateCachePath key of web.config specifies proper path to private cache and that &quot;modify&quot; permission is granted for this folder to the account ASP.NET is running under..
        /// </summary>
        internal static string PrivateCacheDirDoesNotExist {
            get {
                return ResourceManager.GetString("PrivateCacheDirDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public cache folder &apos;{0}&apos; does not exist. Make sure that RelativePublicCachePath key of web.config specifies proper path to public cache and that &quot;modify&quot; permission is granted for this folder to the account ASP.NET is running under..
        /// </summary>
        internal static string PublicCacheDirDoesNotExist {
            get {
                return ResourceManager.GetString("PublicCacheDirDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the color of the rectangle outline..
        /// </summary>
        internal static string RectangleController_OutlineColor {
            get {
                return ResourceManager.GetString("RectangleController_OutlineColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the rectangle outline pen style (solid, dashed, etc)..
        /// </summary>
        internal static string RectangleController_OutlineStyle {
            get {
                return ResourceManager.GetString("RectangleController_OutlineStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the rectangle outline width..
        /// </summary>
        internal static string RectangleController_OutlineWidth {
            get {
                return ResourceManager.GetString("RectangleController_OutlineWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value indicating whether a postback to the server automatically occurs when the user stops modifying the rectangle..
        /// </summary>
        internal static string RectangleRubberband_AutoPostBack {
            get {
                return ResourceManager.GetString("RectangleRubberband_AutoPostBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value that specifies whether the rubberband can be erased (discarded) when user clicks by a mouse out of this rectangle..
        /// </summary>
        internal static string RectangleRubberband_Erasable {
            get {
                return ResourceManager.GetString("RectangleRubberband_Erasable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the grip size..
        /// </summary>
        internal static string RectangleRubberband_GripSize {
            get {
                return ResourceManager.GetString("RectangleRubberband_GripSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value which shows or hides the grips on the rectangle..
        /// </summary>
        internal static string RectangleRubberband_GripsVisible {
            get {
                return ResourceManager.GetString("RectangleRubberband_GripsVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color of mask..
        /// </summary>
        internal static string RectangleRubberband_MaskColor {
            get {
                return ResourceManager.GetString("RectangleRubberband_MaskColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opacity of mask..
        /// </summary>
        internal static string RectangleRubberband_MaskOpacity {
            get {
                return ResourceManager.GetString("RectangleRubberband_MaskOpacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value which specifies whether to display a mask out of the rectangle..
        /// </summary>
        internal static string RectangleRubberband_MaskVisible {
            get {
                return ResourceManager.GetString("RectangleRubberband_MaskVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value which specifies whether the rubberband rectangle can be dragged on the BitmapViewer control..
        /// </summary>
        internal static string RectangleRubberband_Movable {
            get {
                return ResourceManager.GetString("RectangleRubberband_Movable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets the aspect ratio of the rubberband rectangle which should be preserved when ResizeMode is Proportional..
        /// </summary>
        internal static string RectangleRubberband_Ratio {
            get {
                return ResourceManager.GetString("RectangleRubberband_Ratio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a rubberband rectangle..
        /// </summary>
        internal static string RectangleRubberband_Rectangle {
            get {
                return ResourceManager.GetString("RectangleRubberband_Rectangle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fires when the rubberband rectangle is modified (mouse button is released)..
        /// </summary>
        internal static string RectangleRubberband_RectangleChanged {
            get {
                return ResourceManager.GetString("RectangleRubberband_RectangleChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets an allowed resize mode for the rubberband rectangle..
        /// </summary>
        internal static string RectangleRubberband_ResizeMode {
            get {
                return ResourceManager.GetString("RectangleRubberband_ResizeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find control id &apos;{0}&apos;..
        /// </summary>
        internal static string ReferencedControlNotFound {
            get {
                return ResourceManager.GetString("ReferencedControlNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resize mode..
        /// </summary>
        internal static string ResizeMode {
            get {
                return ResourceManager.GetString("ResizeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width and height will be changed arbitrary during resize..
        /// </summary>
        internal static string ResizeMode_Arbitrary {
            get {
                return ResourceManager.GetString("ResizeMode_Arbitrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width and height will not be changed. This disables resize..
        /// </summary>
        internal static string ResizeMode_None {
            get {
                return ResourceManager.GetString("ResizeMode_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width and height will be changed proportionally during resize..
        /// </summary>
        internal static string ResizeMode_Proportional {
            get {
                return ResourceManager.GetString("ResizeMode_Proportional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retval parameters are not supported..
        /// </summary>
        internal static string ReturnValueParametersAreNotSupported {
            get {
                return ResourceManager.GetString("ReturnValueParametersAreNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RulerScale should be greater 0..
        /// </summary>
        internal static string RulerScaleOutOfRange {
            get {
                return ResourceManager.GetString("RulerScaleOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A ScriptManager control must exist on the current page..
        /// </summary>
        internal static string ScriptManagerNotFound {
            get {
                return ResourceManager.GetString("ScriptManagerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style of ScrollBars..
        /// </summary>
        internal static string ScrollBarsStyle {
            get {
                return ResourceManager.GetString("ScrollBarsStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScrollBars will be visible always..
        /// </summary>
        internal static string ScrollBarsStyle_Always {
            get {
                return ResourceManager.GetString("ScrollBarsStyle_Always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScrollBars will be visible if it is necessary..
        /// </summary>
        internal static string ScrollBarsStyle_Auto {
            get {
                return ResourceManager.GetString("ScrollBarsStyle_Auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tile size should not be small then 20..
        /// </summary>
        internal static string TileSizeOutOfRange {
            get {
                return ResourceManager.GetString("TileSizeOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; type is not supported for the remote scripting marshalling..
        /// </summary>
        internal static string TypeNotSupportedForMarshalling {
            get {
                return ResourceManager.GetString("TypeNotSupportedForMarshalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value which turns automatic postback for the Scrolled event..
        /// </summary>
        internal static string ViewerClientSideOptions_PostBackOnScrolled {
            get {
                return ResourceManager.GetString("ViewerClientSideOptions_PostBackOnScrolled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value which turns automatic postback for the BitmapChanged event..
        /// </summary>
        internal static string ViewerClientSideOptions_PostBackOnWorkspaceChanged {
            get {
                return ResourceManager.GetString("ViewerClientSideOptions_PostBackOnWorkspaceChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value which turns automatic postback for the Click event..
        /// </summary>
        internal static string ViewerClientSideOptions_PostBackOnWorkspaceClick {
            get {
                return ResourceManager.GetString("ViewerClientSideOptions_PostBackOnWorkspaceClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets/sets a value which turns automatic postback for the Zoomed event..
        /// </summary>
        internal static string ViewerClientSideOptions_PostBackOnZoomed {
            get {
                return ResourceManager.GetString("ViewerClientSideOptions_PostBackOnZoomed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content alignment inside the control..
        /// </summary>
        internal static string ViewportAlignment {
            get {
                return ResourceManager.GetString("ViewportAlignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content is aligned by the center horizontally and by the bottom vertically..
        /// </summary>
        internal static string ViewportAlignment_CenterBottom {
            get {
                return ResourceManager.GetString("ViewportAlignment_CenterBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content is aligned by the center horizontally and by the center vertically..
        /// </summary>
        internal static string ViewportAlignment_CenterCenter {
            get {
                return ResourceManager.GetString("ViewportAlignment_CenterCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content is aligned by the center horizontally and by the top vertically..
        /// </summary>
        internal static string ViewportAlignment_CenterTop {
            get {
                return ResourceManager.GetString("ViewportAlignment_CenterTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content is aligned by the left side horizontally and by the bottom vertically..
        /// </summary>
        internal static string ViewportAlignment_LeftBottom {
            get {
                return ResourceManager.GetString("ViewportAlignment_LeftBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content is aligned by the left side horizontally and by the center vertically..
        /// </summary>
        internal static string ViewportAlignment_LeftCenter {
            get {
                return ResourceManager.GetString("ViewportAlignment_LeftCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content is aligned by the left side horizontally and by the top vertically..
        /// </summary>
        internal static string ViewportAlignment_LeftTop {
            get {
                return ResourceManager.GetString("ViewportAlignment_LeftTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content is aligned by the right side horizontally and by the bottom vertically..
        /// </summary>
        internal static string ViewportAlignment_RightBottom {
            get {
                return ResourceManager.GetString("ViewportAlignment_RightBottom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content is aligned by the right side horizontally and by the center vertically..
        /// </summary>
        internal static string ViewportAlignment_RightCenter {
            get {
                return ResourceManager.GetString("ViewportAlignment_RightCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content is aligned by the right side horizontally and by the top vertically..
        /// </summary>
        internal static string ViewportAlignment_RightTop {
            get {
                return ResourceManager.GetString("ViewportAlignment_RightTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zoom mode..
        /// </summary>
        internal static string ZoomMode {
            get {
                return ResourceManager.GetString("ZoomMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best fit..
        /// </summary>
        internal static string ZoomMode_BestFit {
            get {
                return ResourceManager.GetString("ZoomMode_BestFit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best fit shrink only..
        /// </summary>
        internal static string ZoomMode_BestFitShrinkOnly {
            get {
                return ResourceManager.GetString("ZoomMode_BestFitShrinkOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fit ti height..
        /// </summary>
        internal static string ZoomMode_FitToHeight {
            get {
                return ResourceManager.GetString("ZoomMode_FitToHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fit to height shrink only..
        /// </summary>
        internal static string ZoomMode_FitToHeightShrinkOnly {
            get {
                return ResourceManager.GetString("ZoomMode_FitToHeightShrinkOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fit to width..
        /// </summary>
        internal static string ZoomMode_FitToWidth {
            get {
                return ResourceManager.GetString("ZoomMode_FitToWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fit to width shrink only..
        /// </summary>
        internal static string ZoomMode_FitToWidthShrinkOnly {
            get {
                return ResourceManager.GetString("ZoomMode_FitToWidthShrinkOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None..
        /// </summary>
        internal static string ZoomMode_None {
            get {
                return ResourceManager.GetString("ZoomMode_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change width and height of control to show full image with Zoom equal 1..
        /// </summary>
        internal static string ZoomMode_ZoomControl {
            get {
                return ResourceManager.GetString("ZoomMode_ZoomControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quality of zoom..
        /// </summary>
        internal static string ZoomQuality {
            get {
                return ResourceManager.GetString("ZoomQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High quality..
        /// </summary>
        internal static string ZoomQuality_High {
            get {
                return ResourceManager.GetString("ZoomQuality_High", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low quality..
        /// </summary>
        internal static string ZoomQuality_Low {
            get {
                return ResourceManager.GetString("ZoomQuality_Low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Medium quality..
        /// </summary>
        internal static string ZoomQuality_Medium {
            get {
                return ResourceManager.GetString("ZoomQuality_Medium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shrink high stretch low..
        /// </summary>
        internal static string ZoomQuality_ShrinkHighStretchLow {
            get {
                return ResourceManager.GetString("ZoomQuality_ShrinkHighStretchLow", resourceCulture);
            }
        }
    }
}
